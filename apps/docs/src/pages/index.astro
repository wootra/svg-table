---
import { LogoDemo } from '@repo/demo-components';
import IndividualLayout from '../layouts/IndividualLayout.astro';
const selected = '/';
---

<IndividualLayout title='Welcome to SVG-Table' selected={selected}>
  <div class="center-content">
    <div class="feature-wrapper">
    
      <div class="logo-holder">
        <LogoDemo width={640} bgColor={null}/>
      </div>

      <section id='features' class='features '>
        <div class='feature'>
          <h4>Flexible Layout</h4>
          <p>
            Create tables with custom layouts, including merged cells and
            nested structures.
          </p>
        </div>
        <div class='feature'>
          <h4>SVG Power</h4>
          <p>
            Leverage the full capabilities of SVG for rich, interactive
            table designs.
          </p>
        </div>
        <div class='feature'>
          <h4>Multi-context design</h4>
          <p>SVG Overflow protection as well as option to overflow</p>
        </div>
        <div class='feature'>
          <h4>Easy Integration</h4>
          <p>Seamlessly integrate with React and Javascript Object</p>
        </div>
        <div class='feature'>
          <h4>Multiline Support</h4>
          <p>Easily add multiline contents in the cell by adding linefeed</p>
        </div>
        <div class='feature'>
          <h4>Simple or Complex</h4>
          <p>Support Simple or Complext use cases on demand</p>
        </div>
      </section>
    </div>
  </div>
</IndividualLayout>

<style>

  .center-content {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: calc(100vh - 3rem);
    margin-top: 3rem;
    min-width: max-content;
    width: 100%;
    padding: 2rem;
    box-sizing: border-box;
    overflow: auto;
  }

  .logo-holder {
		display: flex;
		justify-content: center;
		align-items: center;
		height: max-content;
		margin-bottom: 4rem;
	}

  .feature-wrapper {
  position: relative;
 width: 100%;
 max-height: max-content;
 displaly: flex;
 flex-direction: column;
 gap: 4rem;
 z-index: 1;
}

	.features {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 1rem;
		margin-bottom: 2rem;
    
    
	}
  h1 {
    z-index: 3;
  }

	.feature {
		background-color: var(--color-secondary);
    opacity: 0.8;
    transition: all 0.3s ease;
		padding: 1rem;
		border-radius: 4px;
    z-index: 3;
	}


  .feature:hover {
    transform: translateY(-5px);
    opacity: 1;
    box-shadow: 0 5px 15px rgba(0, 200, 255, 0.2);
  }

  /* .grid-background {

    perspective-origin: bottom;
    transform-style: preserve-3d;
    position: fixed;
   
    top: -100vh;
    left: -100vw;
    right: -100vw;
    bottom: -100vh;
  } */


/* 

  @keyframes grid-swing {
    0% {
      transform: rotateX(70deg) rotateY(-10deg) rotateZ(30deg);
    }
    50% {
      transform: rotateX(30deg) rotateY(-10deg) rotateZ(-30deg);
    }
    100% {
      transform: rotateX(70deg) rotateY(-10deg) rotateZ(30deg);
    }
  }

  .grid-background::after {
    animation: grid-swing 60s ease-in-out infinite;
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    opacity: 0.2;
    --grid-size: 100px;
    --grid-color: rgb(45, 117, 138);
    --grid-border: 3px;
    z-index: 1;
    position: fixed;
    
    background-image: 
      linear-gradient(to right, var(--grid-color) var(--grid-border), transparent var(--grid-border)),
      linear-gradient(to bottom, var(--grid-color) var(--grid-border), transparent var(--grid-border));
    background-size: var(--grid-size) var(--grid-size);
  } */
</style>