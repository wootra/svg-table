---
import {TITLE_TRANSITION} from '../components/consts';
import CenteredLayout from '../layouts/CenteredLayout.astro';
import InteractiveLogo from '../components/InteractiveLogo.astro';
const selected = '/';
const canonicalURL = new URL(Astro.url.pathname, Astro.site);
---
<link rel="canonical" href={canonicalURL} />

<CenteredLayout title='Welcome to SVG-Table' selected={selected}>
  <div class="center-content">
    <div class="feature-wrapper">
      <h1  transition:name="page-title" transition:animate={TITLE_TRANSITION}></h1>
      <InteractiveLogo />
    

      <section id='features' class='features '>
        <div class='feature'>
          <h4>Flexible Style & Layout</h4>
          <p>
            Create tables with custom layouts, including merged cells, multi-line, and
            nested element or tables.
          </p>
        </div>
        <div class='feature'>
          <h4>Multi Framework Support(v3.0)</h4>
          <p>
            Powered by svg-table-module, Simply all framework can be supported.
            Currently we have React, Solid, and VanillaJs.
          </p>
        </div>
        <div class='feature'>
          <h4>Browser Compatibility</h4>
          <p>SVG Table is tested on all morden browsers such as Chrome, Firefox, and Safari.</p>
        </div>
        <div class='feature'>
          <h4>Accessibility Support</h4>
          <p>Support accessibility like HTML table</p>
        </div>
        <div class='feature'>
          <h4>Easy and Powerful usage</h4>
          <p>for simple table, almost no effort. It still support multiple powerful features.</p>
        </div>
      </section>
    </div>
  </div>
</CenteredLayout>

<style>


  .feature-wrapper {
    position: relative;
  max-width: 100%;
  max-height: max-content;
  displaly: flex;
  flex-direction: column;
  gap: 4rem;
  z-index: 1;
  }

	.features {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
		gap: 1rem;
		margin-bottom: 2rem;
    padding-inline: 2rem;
	}

	.feature {
		background-color: var(--color-secondary);
    opacity: 0.8;
    transition: all 0.3s ease;
		padding: 1rem;
		border-radius: 4px;
    z-index: 3;
	}


  .feature:hover {
    transform: translateY(-5px);
    opacity: 1;
    box-shadow: 0 5px 15px rgba(0, 200, 255, 0.2);
  }

</style>